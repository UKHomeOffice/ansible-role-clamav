---

- name: Include variables suitable to our OS Family
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: Include tasks suitable to our OS Family
  include: "{{ ansible_os_family }}.yml"

- name: Set niceness of clamav-daemon within systemd to a lower priority
  copy:
    src: clamav-daemon.service
    dest: /lib/systemd/system/clamav-daemon.service
    owner: root
    group: root
    mode: 0644
  notify: Restart ClamAV

- name: Replace custom clamd.conf
  template:
    dest: "{{ clamd_path }}"
    src: clamd.conf.j2
    owner: "{{ scan_user }}"
    group: root
    mode: 0440
  notify: Restart ClamAV

- name: Replace custom freshclam.conf
  template:
    dest: "{{ freshclam_path }}"
    src: freshclam.conf.j2
    owner: "{{ update_user }}"
    group: root
    mode: 0440
  notify: Restart Freshclam

- name: Freshclam Status
  copy:
    src: freshclam_status.sh
    dest: /usr/local/bin/freshclam_status
    owner: root
    group: root
    mode: 0755

- name: Start clamav daemon
  service:
    name: "{{ clamav_daemon }}"
    state: started
    enabled: yes
  tags: usb

- name: Start freshclam daemon
  service:
    name: "{{ clamav_update }}"
    state: started
    enabled: yes
  when: "{{ freshclam_enabled }}"
  tags: usb

- name: Set cron job for scanning / at 12:00 on a Wednesday
  cron:
    name: clamdscan
    minute: "0"
    hour: "12"
    dow: "4"
    job: "/usr/bin/clamdscan --multiscan --fdpass /"

#- shell: "/usr/local/bin/freshclam_status"
#  register: result
#  until: result.stdout.find("OK") != -1
#  retries: 10
#  delay: 20
